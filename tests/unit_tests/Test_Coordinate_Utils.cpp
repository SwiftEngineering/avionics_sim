/**
 * @brief       Implementation for testing Coordinate Utils class. 
 * Canonical values obtained from Conrad McGreal's MATLAB hand calcs.
 * The source for this test was created programmatically from a MATLAB script because of the great number of test
 * cases required to validate the method(s) of this class.
 * @file        Test_Coordinate_Utils.cpp
 * @author      Ihimu Ukpo <iukpo@swiftengineering.com>
 * @copyright   Copyright(C) 2019, Swift Engineering Inc. All rights reserved.
 */


#include <gtest/gtest.h>
#include <boost/array.hpp>
#include <ignition/math.hh>
#include <stdio.h>
#include "avionics_sim/Coordinate_Utils.hpp"
TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_negpi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_negpi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_negpi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_negpi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_negpi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_negpi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_negpi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_negpi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_0_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_0_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_0_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_0_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_0_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_0_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_0_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_0_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_pi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_pi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_pi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_pi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_pi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_pi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_pi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_pi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_2pi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_2pi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_2pi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_2pi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_2pi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_2pi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_2pi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_neg2pi_2pi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_negpi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_negpi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_negpi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_negpi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_negpi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_negpi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_negpi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_negpi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_0_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_0_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_0_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_0_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_0_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_0_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_0_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_0_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_pi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_pi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_pi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_pi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_pi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_pi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_pi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_pi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_2pi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_2pi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_2pi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_2pi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_2pi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_2pi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_2pi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_negpi_2pi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_negpi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_negpi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_negpi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_negpi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_negpi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_negpi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_negpi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_negpi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_0_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_0_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_0_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_0_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_0_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_0_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_0_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_0_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_pi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_pi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_pi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_pi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_pi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_pi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_pi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_pi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_2pi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_2pi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_2pi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_2pi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_2pi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_2pi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_2pi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_0_2pi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_negpi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_negpi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_negpi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_negpi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_negpi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_negpi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_negpi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_negpi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_0_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_0_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_0_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_0_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_0_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_0_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_0_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_0_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_pi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_pi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_pi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_pi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_pi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_pi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_pi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_pi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_2pi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_2pi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_2pi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_2pi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_2pi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_2pi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_2pi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_pi_2pi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_negpi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_negpi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_negpi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_negpi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_negpi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_negpi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_negpi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_negpi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_0_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_0_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_0_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_0_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_0_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_0_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_0_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_0_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_pi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_pi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_pi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_pi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_pi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_pi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_pi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_pi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_2pi_linear_velocity_0_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_2pi_linear_velocity_0_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_2pi_linear_velocity_0_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_2pi_linear_velocity_0_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_2pi_linear_velocity_20_0_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_2pi_linear_velocity_20_0_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_2pi_linear_velocity_20_20_0) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_neg2pi_2pi_2pi_linear_velocity_20_20_20) {
double wingPoseX=-6.283185;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_negpi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_negpi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_negpi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_negpi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_negpi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_negpi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_negpi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_negpi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_0_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_0_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_0_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_0_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_0_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_0_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_0_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_0_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_pi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_pi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_pi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_pi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_pi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_pi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_pi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_pi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_2pi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_2pi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_2pi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_2pi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_2pi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_2pi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_2pi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_neg2pi_2pi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_negpi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_negpi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_negpi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_negpi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_negpi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_negpi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_negpi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_negpi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_0_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_0_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_0_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_0_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_0_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_0_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_0_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_0_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_pi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_pi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_pi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_pi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_pi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_pi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_pi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_pi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_2pi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_2pi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_2pi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_2pi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_2pi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_2pi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_2pi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_negpi_2pi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_negpi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_negpi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_negpi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_negpi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_negpi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_negpi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_negpi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_negpi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_0_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_0_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_0_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_0_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_0_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_0_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_0_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_0_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_pi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_pi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_pi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_pi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_pi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_pi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_pi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_pi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_2pi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_2pi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_2pi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_2pi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_2pi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_2pi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_2pi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_0_2pi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_negpi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_negpi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_negpi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_negpi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_negpi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_negpi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_negpi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_negpi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_0_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_0_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_0_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_0_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_0_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_0_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_0_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_0_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_pi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_pi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_pi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_pi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_pi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_pi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_pi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_pi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_2pi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_2pi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_2pi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_2pi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_2pi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_2pi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_2pi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_pi_2pi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_negpi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_negpi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_negpi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_negpi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_negpi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_negpi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_negpi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_negpi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_0_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_0_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_0_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_0_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_0_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_0_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_0_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_0_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_pi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_pi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_pi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_pi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_pi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_pi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_pi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_pi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_2pi_linear_velocity_0_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_2pi_linear_velocity_0_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_2pi_linear_velocity_0_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_2pi_linear_velocity_0_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_2pi_linear_velocity_20_0_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_2pi_linear_velocity_20_0_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_2pi_linear_velocity_20_20_0) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_negpi_2pi_2pi_linear_velocity_20_20_20) {
double wingPoseX=-3.141593;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_negpi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_negpi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_negpi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_negpi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_negpi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_negpi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_negpi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_negpi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_0_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_0_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_0_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_0_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_0_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_0_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_0_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_0_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_pi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_pi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_pi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_pi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_pi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_pi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_pi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_pi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_2pi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_2pi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_2pi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_2pi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_2pi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_2pi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_2pi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_neg2pi_2pi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_negpi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_negpi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_negpi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_negpi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_negpi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_negpi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_negpi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_negpi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_0_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_0_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_0_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_0_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_0_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_0_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_0_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_0_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_pi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_pi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_pi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_pi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_pi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_pi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_pi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_pi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_2pi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_2pi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_2pi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_2pi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_2pi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_2pi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_2pi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_negpi_2pi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_negpi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_negpi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_negpi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_negpi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_negpi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_negpi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_negpi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_negpi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_0_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_0_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_0_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_0_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_0_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_0_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_0_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_0_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_pi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_pi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_pi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_pi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_pi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_pi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_pi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_pi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_2pi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_2pi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_2pi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_2pi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_2pi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_2pi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_2pi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_0_2pi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_negpi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_negpi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_negpi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_negpi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_negpi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_negpi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_negpi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_negpi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_0_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_0_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_0_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_0_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_0_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_0_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_0_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_0_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_pi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_pi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_pi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_pi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_pi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_pi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_pi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_pi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_2pi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_2pi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_2pi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_2pi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_2pi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_2pi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_2pi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_pi_2pi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_negpi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_negpi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_negpi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_negpi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_negpi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_negpi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_negpi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_negpi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_0_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_0_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_0_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_0_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_0_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_0_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_0_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_0_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_pi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_pi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_pi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_pi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_pi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_pi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_pi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_pi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_2pi_linear_velocity_0_0_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_2pi_linear_velocity_0_0_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_2pi_linear_velocity_0_20_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_2pi_linear_velocity_0_20_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_2pi_linear_velocity_20_0_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_2pi_linear_velocity_20_0_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_2pi_linear_velocity_20_20_0) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_0_2pi_2pi_linear_velocity_20_20_20) {
double wingPoseX=0.000000;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_negpi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_negpi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_negpi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_negpi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_negpi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_negpi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_negpi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_negpi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_0_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_0_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_0_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_0_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_0_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_0_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_0_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_0_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_pi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_pi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_pi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_pi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_pi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_pi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_pi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_pi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_2pi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_2pi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_2pi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_2pi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_2pi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_2pi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_2pi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_neg2pi_2pi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_negpi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_negpi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_negpi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_negpi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_negpi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_negpi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_negpi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_negpi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_0_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_0_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_0_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_0_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_0_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_0_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_0_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_0_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_pi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_pi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_pi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_pi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_pi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_pi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_pi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_pi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_2pi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_2pi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_2pi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_2pi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_2pi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_2pi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_2pi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_negpi_2pi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_negpi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_negpi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_negpi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_negpi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_negpi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_negpi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_negpi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_negpi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_0_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_0_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_0_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_0_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_0_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_0_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_0_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_0_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_pi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_pi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_pi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_pi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_pi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_pi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_pi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_pi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_2pi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_2pi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_2pi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_2pi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_2pi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_2pi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_2pi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_0_2pi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_negpi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_negpi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_negpi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_negpi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_negpi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_negpi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_negpi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_negpi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_0_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_0_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_0_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_0_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_0_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_0_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_0_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_0_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_pi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_pi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_pi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_pi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_pi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_pi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_pi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_pi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_2pi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_2pi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_2pi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_2pi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_2pi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_2pi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_2pi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_pi_2pi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_negpi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_negpi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_negpi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_negpi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_negpi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_negpi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_negpi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_negpi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_0_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_0_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_0_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_0_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_0_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_0_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_0_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_0_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_pi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_pi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_pi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_pi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_pi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_pi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_pi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_pi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_2pi_linear_velocity_0_0_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_2pi_linear_velocity_0_0_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_2pi_linear_velocity_0_20_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_2pi_linear_velocity_0_20_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_2pi_linear_velocity_20_0_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_2pi_linear_velocity_20_0_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_2pi_linear_velocity_20_20_0) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_pi_2pi_2pi_linear_velocity_20_20_20) {
double wingPoseX=3.141593;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_negpi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_negpi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_negpi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_negpi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_negpi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_negpi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_negpi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_negpi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_0_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_0_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_0_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_0_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_0_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_0_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_0_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_0_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_pi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_pi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_pi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_pi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_pi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_pi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_pi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_pi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_2pi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_2pi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_2pi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_2pi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_2pi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_2pi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_2pi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_neg2pi_2pi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_negpi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_negpi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_negpi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_negpi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_negpi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_negpi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_negpi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_negpi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_0_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_0_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_0_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_0_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_0_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_0_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_0_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_0_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_pi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_pi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_pi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_pi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_pi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_pi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_pi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_pi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_2pi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_2pi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_2pi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_2pi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_2pi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_2pi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_2pi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_negpi_2pi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=-3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_negpi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_negpi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_negpi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_negpi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_negpi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_negpi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_negpi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_negpi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_0_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_0_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_0_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_0_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_0_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_0_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_0_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_0_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_pi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_pi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_pi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_pi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_pi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_pi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_pi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_pi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_2pi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_2pi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_2pi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_2pi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_2pi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_2pi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_2pi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_0_2pi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=0.000000;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_negpi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_negpi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_negpi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_negpi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_negpi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_negpi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_negpi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_negpi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_0_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_0_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_0_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_0_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_0_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_0_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_0_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_0_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_pi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_pi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_pi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_pi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_pi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_pi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_pi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_pi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_2pi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_2pi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-0.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_2pi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_2pi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_2pi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_2pi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_2pi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_pi_2pi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=3.141593;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=20.000000;
double canonicalZ=-20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_neg2pi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_neg2pi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_neg2pi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_neg2pi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_neg2pi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_neg2pi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_neg2pi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_neg2pi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_negpi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_negpi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_negpi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_negpi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_negpi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_negpi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_negpi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_negpi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=-3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_0_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_0_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_0_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_0_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_0_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_0_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_0_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_0_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=0.000000;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_pi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_pi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_pi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_pi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_pi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_pi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_pi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_pi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=3.141593;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=-20.000000;
double canonicalY=-20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_2pi_linear_velocity_0_0_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=0.000000;
double canonicalY=0.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_2pi_linear_velocity_0_0_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=-0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_2pi_linear_velocity_0_20_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=-0.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_2pi_linear_velocity_0_20_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=0.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=0.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_2pi_linear_velocity_20_0_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=-0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_2pi_linear_velocity_20_0_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=0.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=0.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_2pi_linear_velocity_20_20_0) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=0.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=0.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

TEST(Test_Coordinate_Utils_UnitTest, project_vector_global_test_orientation_2pi_2pi_2pi_linear_velocity_20_20_20) {
double wingPoseX=6.283185;
double wingPoseY=6.283185;
double wingPoseZ=6.283185;
double worldVelocityX=20.000000;
double worldVelocityY=20.000000;
double worldVelocityZ=20.000000;
double canonicalX=20.000000;
double canonicalY=20.000000;
double canonicalZ=20.000000;
ignition::math::Vector3d canonicalResult =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ); 
ignition::math::Pose3d wingPose =ignition::math::Pose3d(0.0,0.0,0.0,wingPoseX, wingPoseY, wingPoseZ); 
ignition::math::Vector3d worldVelocity =ignition::math::Vector3d(worldVelocityX, worldVelocityY, worldVelocityZ);
ignition::math::Vector3d destVector;
ignition::math::Vector3d vBody; 
ignition::math::Vector3d wingFrameVelocity;
ignition::math::Vector3d vInLDPlane_v; 
vBody = ignition::math::Vector3d(worldVelocity.X(), worldVelocity.Y(), worldVelocity.Z());
avionics_sim::Coordinate_Utils::project_vector_global(wingPose, vBody, &wingFrameVelocity);
ASSERT_NEAR(wingFrameVelocity.X(), canonicalX, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Y(), canonicalY, 1e-03);
ASSERT_NEAR(wingFrameVelocity.Z(), canonicalZ, 1e-03);
}

